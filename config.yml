# Configuration for Continuous Integration (CI) of smart contract monitoring ecosystem

contracts:
  # - name: "ProductOrder"
  #   models:
  #     - name: "Model1"
  #       id: "1701030" # The id of the model in DCRGraphs.net website
  #       functions:
  #         functionIdentifier1:
  #           paramIdentifier1:
  #             EVMType: "..."
  #             DCRType: "..."
  #             DCRNodeID: "..."
  #           roleSetter: true
  #           roleVariableIdentifier: "owner"
  #     - name: "Model2"
  #       id: "1701159"
  #       functions:
  #         setGreet:
  #           EVMType: "string"
  #           DCRType: "integer"
  #           DCRNodeID: "setGreet"
  #   tests: # if there are tests specified for the specific monitor, it will run them alongside the monitor automatically. Otherwise, only thing that will run is the monitor
  #     - "ProductOrderExploit"
  - name: "ProductOrder"
    constructorParamSpecs:
      - name: "_price"
        type: "uint256"
        sourceType: "static"
        value: 1
    models:
      - name: "ProductOrder"
        id: "1701030"
        functions: []
    tests: # if there are tests specified for the specific monitor, it will run them alongside the monitor automatically. Otherwise, only thing that will run is the monitor
      - "ProductOrderExploit"

  - name: "MultiStageAuction"
    constructorParamSpecs: []
    models:
      - name: "MultiStageAuction"
        id: "1701049"
        functions: []
    tests: # if there are tests specified for this model, it will run them alongside the monitor automatically. Otherwise, only thing that will run is the monitor
      - "MultiStageAuctionExploit"

  - name: "PrizeDistribution"
    constructorParamSpecs:
      - name: "_beneficiary"
        type: "address"
        sourceType: "dynamic" # Indicates the value should be fetched dynamically
        source:
          type: "EOA" # EOA or contract
          # details for a contract source:
          # details:
          #   contractAddress: "0x0"
          #   functionCall: "getSubscriberAddress"
          #   returnType: "address"
          # details for an EOA:
          # For an EOA, you can just get the address from the list of accounts in the environment; no need to specify it here;
        # - name: "threshold"
        #   type: "uint256"
        #   source: "static"
        #   value: "1000"  # Static value provided directly in the config
    models:
      - name: "PrizeDistribution"
        id: "1701044" # The id of the model in DCRGraphs.net website
      # - name: "Model2"
      #   id: "1701159"
      #   functions:
      #     setGreet:
      #       EVMType: "string"
      #       DCRType: "integer"
      #       DCRNodeID: "setGreet"
    tests: # if there are tests specified for this model, it will run them alongside the monitor automatically. Otherwise, only thing that will run is the monitor
      - "PrizeDistributionExploit"

  # - name: "HelloWorld"
  #   models:
  #     - name: "HelloWorld Model"
  #       id: "1702173" # The id of the model in DCRGraphs.net website
  #       # Plugin conventions if any, to execute (in order)
  #       # conventions:
  #       #  - name: ""
  #       functions:
  #         setGreet:
  #           EVMType: "string"
  #           DCRType: "integer"
  #           DCRNodeID: "setGreet"
  #   tests:
  #     - "HelloWorldExploit"

tests:
  - name: "HelloWorldExploit"
    description: "Exploits for time lock-based property of HelloWorld contract"
    directory: "/tests/exploits/"
    files:
      - "HelloWorldExploit.js"
    environment: "anvil"

  - name: "PrizeDistributionExploit"
    description: "Exploits for time-based vulnerability of PrizeDistribution contract which is enabled by a poor logic in the contract implementation."
    directory: "/tests/exploits/"
    files:
      - "PrizeDistributionExploit.js"
    environment: "anvil"

  - name: "MultiStageAuctionExploit"
    description: "Exploits for a temporal property of ..."
    directory: "/tests/exploits"
    files:
      - "MultiStageAuctionExploit.js"
    environment: "anvil"

  - name: "ProductOrderExploit"
    description: "No description yet..."
    directory: "/tests/exploits"
    files:
      - "ProductOrderExploit.js"
    environment: "anvil"

environments:
  - name: "anvil"
    version: "0.2.0"
